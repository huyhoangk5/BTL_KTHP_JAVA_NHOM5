/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import DAO.TaiKhoanDAO;
import Entity.TaiKhoan;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class QuanLyTaiKhoan extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyTaiKhoan
     */
    
    private final TaiKhoanDAO tkDAO = new TaiKhoanDAO();
    
    public QuanLyTaiKhoan() {
        initComponents();
        
        loadTableTaiKhoan();
        
        ButtonGroup roleGroup = new ButtonGroup();
        roleGroup.add(radQuanLy);
        roleGroup.add(radNhanVien);
        
        tblTaiKhoan.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Chặn sự kiện lặp lại khi chưa chọn xong dòng
                if (!e.getValueIsAdjusting()) {
                    hienThiDongDuocChon();
                }
            }
        });
    }

    private void loadTableTaiKhoan() {
        TaiKhoanDAO dao = new TaiKhoanDAO();
        List<TaiKhoan> list = dao.hienThiTatCaTaiKhoan();

        DefaultTableModel model = (DefaultTableModel) tblTaiKhoan.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ

        for (TaiKhoan tk : list) {
            model.addRow(new Object[]{
                tk.getMaTK(),
                tk.getTenTK(),
                tk.getMk(),
                tk.getQuyen()});
        }
    }
    
    private void hienThiDongDuocChon() {
        int row = tblTaiKhoan.getSelectedRow();
        if (row >= 0) {
            String maTK = tblTaiKhoan.getValueAt(row, 0).toString();
            String tenTK = tblTaiKhoan.getValueAt(row, 1).toString();
            String matKhau = tblTaiKhoan.getValueAt(row, 2).toString();
            String quyen = tblTaiKhoan.getValueAt(row, 3).toString();

            txtMaTK.setText(maTK);
            txtTenTK.setText(tenTK);
            txtMk.setText(matKhau);

            if (quyen.equalsIgnoreCase("Người quản lý")) {
                radQuanLy.setSelected(true);
            } else {
                radNhanVien.setSelected(true);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaTK = new javax.swing.JTextField();
        txtTenTK = new javax.swing.JTextField();
        txtMk = new javax.swing.JTextField();
        radQuanLy = new javax.swing.JRadioButton();
        radNhanVien = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        listTaiKhoan = new javax.swing.JScrollPane();
        tblTaiKhoan = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 750));

        jPanel1.setBackground(new java.awt.Color(100, 255, 100));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Thông tin tài khoản");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Mã tài khoản");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Quyền");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Tên tài khoản");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Mật khẩu");

        txtMaTK.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMaTK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMaTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaTKActionPerformed(evt);
            }
        });

        txtTenTK.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTenTK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTenTK.setMinimumSize(new java.awt.Dimension(180, 50));

        txtMk.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMk.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        radQuanLy.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        radQuanLy.setText("Người quản lý");

        radNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        radNhanVien.setText("Nhân viên");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radQuanLy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenTK, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(txtMk))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(txtMaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenTK, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(txtMk, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radQuanLy)
                    .addComponent(radNhanVien))
                .addGap(75, 75, 75))
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 0));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Danh sách tài khoản");

        tblTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã tài khoản", "Tên tài khoản", "Mật khẩu", "Quyền"
            }
        ));
        listTaiKhoan.setViewportView(tblTaiKhoan);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(listTaiKhoan)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listTaiKhoan, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/add (2).png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/logout (2).png"))); // NOI18N
        btnExit.setText("Quay lại");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/trash-bin (1) (2).png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/tools (1).png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/magnifier (1).png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(btnThem)
                .addGap(93, 93, 93)
                .addComponent(btnSua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(btnXoa)
                .addGap(93, 93, 93)
                .addComponent(btnTimKiem)
                .addGap(96, 96, 96)
                .addComponent(btnExit)
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnExit)
                    .addComponent(btnXoa)
                    .addComponent(btnTimKiem)
                    .addComponent(btnSua))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaTKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaTKActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        try {
            // Lấy dòng được chọn
            int selectedRow = tblTaiKhoan.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để sửa.");
                return;
            }

            // Lấy thông tin hiện tại từ bảng
            DefaultTableModel model = (DefaultTableModel) tblTaiKhoan.getModel();
            String maTK = (String) model.getValueAt(selectedRow, 0);
            String tenTK = (String) model.getValueAt(selectedRow, 1);
            String mk = (String) model.getValueAt(selectedRow, 2);
            String quyen = (String) model.getValueAt(selectedRow, 3);
            // Lấy giá trị từ các ô nhập liệu, nếu trống thì giữ nguyên giá trị cũ

            String newTenTK = txtTenTK.getText().trim();
            String newMk = txtMk.getText().trim();
            String newQuyen = radQuanLy.isSelected() ? "Người quản lý" : "Nhân viên";

            // Kiểm tra và giữ nguyên giá trị cũ nếu ô trống
            if (!newTenTK.isEmpty()) tenTK = newTenTK;
            if (!newMk.isEmpty()) mk = newMk;
            quyen = newQuyen;

            TaiKhoan tk = new TaiKhoan(maTK, tenTK, mk, quyen);

            // Cập nhật cơ sở dữ liệu
            boolean updateCheck = tkDAO.suaTaiKhoan(tk);

            // Cập nhật bảng nếu cơ sở dữ liệu cập nhật thành công
            if (updateCheck) {
                model.setValueAt(maTK, selectedRow, 0);
                model.setValueAt(tenTK, selectedRow, 1);
                model.setValueAt(mk, selectedRow, 2);
                model.setValueAt(quyen, selectedRow, 3);

                JOptionPane.showMessageDialog(this, "Cập nhật thông tin nhân viên thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật thất bại. Vui lòng kiểm tra lại dữ liệu.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi sửa dữ liệu: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
        
        new Menu_QuanLy().setVisible(true);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) tblTaiKhoan.getModel();

            String maTK = txtMaTK.getText();
            String tenTK = txtTenTK.getText();
            String mk = txtMk.getText();
            String quyen = radQuanLy.isSelected() ? "Người quản lý" : "Nhân viên";

            if (maTK.isEmpty() || tenTK.isEmpty() || mk.isEmpty() || quyen.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin.");
                return;
            }

            if (!maTK.matches("^TK\\d+$")) {
                JOptionPane.showMessageDialog(this, "Mã tài khoản phải có dạng TK kèm theo số, ví dụ: TK001");
                return;
            }
            
            TaiKhoan newTK = new TaiKhoan(maTK, tenTK, mk, quyen);

            TaiKhoan tk = tkDAO.timTaiKhoanTheoMaTK(maTK);
            if (tk != null) {
                JOptionPane.showMessageDialog(this, "Mã nhân viên không được trùng");
                return;
            }
            model.addRow(new Object[]{maTK, tenTK, mk, quyen});

            boolean checkUpdate = tkDAO.themTaiKhoan(newTK);
            if (checkUpdate) {
                JOptionPane.showMessageDialog(this, "Thêm tài khoản thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Thêm tài khoản thất bại");
            }
            
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm dữ liệu: " + e.getMessage());
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        try {
            // Lấy dòng được chọn trong bảng
            int selectedRow = tblTaiKhoan.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.");
                return;
            }

            // Xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Bạn có chắc chắn muốn xóa tài khoản này?",
                    "Xác nhận xóa",
                    JOptionPane.YES_NO_OPTION);

            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            tkDAO.xoaNhanVienTheoMaTK((String) tblTaiKhoan.getValueAt(selectedRow, 0));

            // Lấy mô hình bảng và xóa dòng được chọn
            DefaultTableModel model = (DefaultTableModel) tblTaiKhoan.getModel();
            model.removeRow(selectedRow);

            // Thông báo xóa thành công
            JOptionPane.showMessageDialog(this, "Xóa tài khoản thành công!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa: " + e.getMessage());
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        try {
            // Hiển thị hộp thoại để nhập mã nhân viên
            String maTK = JOptionPane.showInputDialog(this, "Nhập mã tài khoản để tìm kiếm:", "Tìm Kiếm", JOptionPane.QUESTION_MESSAGE);

            // Kiểm tra xem người dùng có nhập mã hay không
            if (maTK == null || maTK.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mã tài khoản.");
                return;
            }

            // Lấy mô hình bảng
            DefaultTableModel model = (DefaultTableModel) tblTaiKhoan.getModel();
            int rowCount = model.getRowCount();
            int foundRow = -1;

            // Tìm kiếm dòng có mã nhân viên phù hợp
            for (int i = 0; i < rowCount; i++) {
                String currentMaTK = (String) model.getValueAt(i, 0); // Cột 0 là MaNhanVien
                if (currentMaTK != null && currentMaTK.equalsIgnoreCase(maTK.trim())) {
                    foundRow = i;
                    break;
                }
            }

            // Nếu không tìm thấy, hiển thị thông báo
            if (foundRow == -1) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy tài khoản có mã " + maTK + ".");
                return;
            }

            // Chọn và cuộn đến dòng tìm thấy
            tblTaiKhoan.setRowSelectionInterval(foundRow, foundRow);
            tblTaiKhoan.scrollRectToVisible(tblTaiKhoan.getCellRect(foundRow, 0, true));

            JOptionPane.showMessageDialog(this, "Đã tìm thấy tài khoản có mã " + maTK + "!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tìm kiếm: " + e.getMessage());
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyTaiKhoan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane listTaiKhoan;
    private javax.swing.JRadioButton radNhanVien;
    private javax.swing.JRadioButton radQuanLy;
    private javax.swing.JTable tblTaiKhoan;
    private javax.swing.JTextField txtMaTK;
    private javax.swing.JTextField txtMk;
    private javax.swing.JTextField txtTenTK;
    // End of variables declaration//GEN-END:variables
}

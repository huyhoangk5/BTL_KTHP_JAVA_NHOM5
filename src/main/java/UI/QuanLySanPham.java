package UI;

import DAO.SanPhamDAO;
import Entity.SanPham;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nvtqu
 */
public class QuanLySanPham extends javax.swing.JFrame {

    private List<SanPham> sanpham;
    private DefaultTableModel model;
    private final SanPhamDAO spDAO = new SanPhamDAO();
    int selectedIndex;

    public QuanLySanPham() {
        initComponents();
        this.setLocationRelativeTo(null);
        model = (DefaultTableModel) tableKetQua.getModel();
        showTable();
        loadTableSanPham();
        tableKetQua.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Chặn sự kiện lặp lại khi chưa chọn xong dòng
                if (!e.getValueIsAdjusting()) {
                    hienThiDongDuocChon();
                }
            }
        });
    }

    private void loadTableSanPham() {
        SanPhamDAO dao = new SanPhamDAO();
        List<SanPham> list = dao.hienThiDanhSachSanPham();

        model = (DefaultTableModel) tableKetQua.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ

        for (SanPham sp : list) {
            model.addRow(new Object[]{
                sp.getMaSP(),
                sp.getTenSP(),
                sp.getLoaiSP(),
                sp.getTenHSX(),
                sp.getKichThuoc(),
                sp.getSoLuong(),
                sp.getGia(),});
        }
    }

    private void hienThiDongDuocChon() {
        int row = tableKetQua.getSelectedRow();
        if (row >= 0) {
            String maSP = tableKetQua.getValueAt(row, 0).toString();
            String tenSP = tableKetQua.getValueAt(row, 1).toString();
            String loaiSP = tableKetQua.getValueAt(row, 2).toString();
            String hangSX = tableKetQua.getValueAt(row, 3).toString();
            String kichThuoc = tableKetQua.getValueAt(row, 4).toString();
            String soLuongStr = tableKetQua.getValueAt(row, 5).toString();
            String giaBan = tableKetQua.getValueAt(row, 6).toString();

            txtMaSP.setText(maSP);
            txtTenSP.setText(tenSP);
            cbLoaiSP.setSelectedItem(loaiSP);
            txtHangSX.setText(hangSX);
            cbKichThuoc.setSelectedItem(kichThuoc);
            try {
                int soLuong = Integer.parseInt(soLuongStr);
                spSoLuong.setValue(soLuong);
            } catch (NumberFormatException e) {
                spSoLuong.setValue(0);
            }
            txtGia.setText(giaBan);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        spSoLuong = new javax.swing.JSpinner();
        cbLoaiSP = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        txtHangSX = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbKichThuoc = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKetQua = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        btnHuyBo = new javax.swing.JButton();
        btnTroLai = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Thông Tin Sản Phẩm");

        jLabel3.setText("Mã sản phẩm: ");

        jLabel4.setText("Tên sản phẩm:");

        jLabel5.setText("Số lượng:");

        jLabel6.setText("Loại sản phẩm:");

        cbLoaiSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Áo", "Quần", "Váy" }));

        jLabel7.setText("Giá bán: ");

        jLabel8.setText("Hãng sản xuất:");

        jLabel9.setText("Kích thước: ");

        cbKichThuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S", "M", "L", "XL", "XXL", " " }));
        cbKichThuoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKichThuocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(spSoLuong))))
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbKichThuoc, 0, 117, Short.MAX_VALUE)
                        .addGap(70, 70, 70))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtHangSX, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cbLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cbKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtHangSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Danh Sách Sản Phẩm");

        tableKetQua.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm", "Hãng sản xuất", "Kích thước", "Số lượng", "Giá bán"
            }
        ));
        jScrollPane1.setViewportView(tableKetQua);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnHuyBo.setText("Hủy bỏ");
        btnHuyBo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyBoActionPerformed(evt);
            }
        });

        btnTroLai.setText("Trở lại");
        btnTroLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTroLaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(btnTroLai)
                        .addGap(119, 119, 119)
                        .addComponent(btnThem)
                        .addGap(64, 64, 64)
                        .addComponent(btnSua)
                        .addGap(68, 68, 68)
                        .addComponent(btnXoa)
                        .addGap(69, 69, 69)
                        .addComponent(btnTimKiem)
                        .addGap(70, 70, 70)
                        .addComponent(btnHuyBo)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnSua)
                            .addComponent(btnXoa)
                            .addComponent(btnTimKiem)
                            .addComponent(btnHuyBo))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnTroLai, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        try {

            String masp = JOptionPane.showInputDialog(this, "Nhập mã sản phẩm để tìm kiếm:", "Tìm Kiếm", JOptionPane.QUESTION_MESSAGE);

            if (masp == null || masp.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mã tài khoản.");
                return;
            }

            // Lấy mô hình bảng
            int rowCount = model.getRowCount();
            int foundRow = -1;

            for (int i = 0; i < rowCount; i++) {
                String currentMaTK = (String) model.getValueAt(i, 0);
                if (currentMaTK != null && currentMaTK.equalsIgnoreCase(masp.trim())) {
                    foundRow = i;
                    break;
                }
            }

            if (foundRow == -1) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy tài khoản có mã " + masp + ".");
                return;
            }

            // Chọn đến dòng tìm thấy
            tableKetQua.setRowSelectionInterval(foundRow, foundRow);
            tableKetQua.scrollRectToVisible(tableKetQua.getCellRect(foundRow, 0, true));

            JOptionPane.showMessageDialog(this, "Đã tìm thấy tài khoản có mã " + masp + "!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tìm kiếm: " + e.getMessage());
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            // Lấy dòng được chọn trong bảng
            int selectedRow = tableKetQua.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.");
                return;
            }

            // Xác nhận trước khi xóa
            int confirm = JOptionPane.showConfirmDialog(this,
                    "Bạn có chắc chắn muốn xóa sản phẩm này?",
                    "Xác nhận xóa",
                    JOptionPane.YES_NO_OPTION);

            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            spDAO.xoaSanPham((String) tableKetQua.getValueAt(selectedRow, 0));

            // Lấy mô hình bảng và xóa dòng được chọn
            DefaultTableModel model = (DefaultTableModel) tableKetQua.getModel();
            model.removeRow(selectedRow);

            // Thông báo xóa thành công
            JOptionPane.showMessageDialog(this, "Xóa sản phẩm thành công!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa: " + e.getMessage());
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            model = (DefaultTableModel) tableKetQua.getModel();
            String masp = txtMaSP.getText();
            String tensp = txtTenSP.getText();
            String loaisp = (String) cbLoaiSP.getSelectedItem();
            String hangsx = txtHangSX.getText();
            String kichthuoc = (String) cbKichThuoc.getSelectedItem();
            int soluong = (int) spSoLuong.getValue();
            String gia1 = txtGia.getText();

            if (masp.isEmpty() || tensp.isEmpty() || hangsx.isEmpty() || gia1.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin");
                return;
            }
            if (!masp.matches("^SP\\d+$")) {
                JOptionPane.showMessageDialog(this, "Mã sản phẩm không đúng định dạng");
                return;
            }
            double gia = Double.parseDouble(gia1);
            SanPham newSP = new SanPham(masp, tensp, loaisp, hangsx, kichthuoc, soluong, gia);
            SanPham sp = spDAO.timSanPhamTheoMaSP(masp);
            if (sp != null) {
                JOptionPane.showMessageDialog(this, "Mã sản phẩm không được trùng");
                return;
            }
            boolean kiemTra = spDAO.themSanPham(newSP);
            if (kiemTra) {
                model.addRow(new Object[]{masp, tensp, loaisp, hangsx, kichthuoc, soluong, gia});
                JOptionPane.showMessageDialog(this, "Thêm sản phẩm thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Thêm sản phẩm thất bại");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm dữ liệu " + ex.getMessage());
            Logger.getLogger(QuanLySanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void cbKichThuocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKichThuocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbKichThuocActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            // Lấy dòng được chọn
            int selectedRow = tableKetQua.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để sửa.");
                return;
            }

            // Lấy thông tin hiện tại từ bảng
            String masp = (String) model.getValueAt(selectedRow, 0);
            String tensp = (String) model.getValueAt(selectedRow, 1);
            String loaisp = (String) model.getValueAt(selectedRow, 2);
            String hangsx = (String) model.getValueAt(selectedRow, 3);
            String kichthuoc = (String) model.getValueAt(selectedRow, 4);
            String soluong = String.valueOf(model.getValueAt(selectedRow, 5));
            String gia = String.valueOf(model.getValueAt(selectedRow, 6));

            // Lấy giá trị từ các ô nhập liệu, nếu trống thì giữ nguyên giá trị cũ
            String newMasp = txtMaSP.getText().trim();
            String newTensp = txtTenSP.getText().trim();
            String newLoaisp = (String) cbLoaiSP.getSelectedItem();
            String newHangsx = txtHangSX.getText().trim();
            String newKichthuoc = (String) cbKichThuoc.getSelectedItem();
            int newSoluong = (int) spSoLuong.getValue();
            String newGia = txtGia.getText().trim();

            // Kiểm tra và giữ nguyên giá trị cũ nếu ô trống
            if (!newMasp.isEmpty()) {
                masp = newMasp;
            }
            if (!newTensp.isEmpty()) {
                tensp = newTensp;
            }
            if (!newHangsx.isEmpty()) {
                hangsx = newHangsx;
            }
            if (!newGia.isEmpty()) {
                gia = newGia;
            }

            SanPham sp = new SanPham();
            sp.setMaSP(masp);
            sp.setTenSP(tensp);
            sp.setLoaiSP(loaisp);
            sp.setTenHSX(hangsx);
            sp.setGia(Double.parseDouble(gia));

            // Cập nhật cơ sở dữ liệu
            boolean updateCheck = spDAO.suaSanPham(sp);

            // Cập nhật bảng nếu cơ sở dữ liệu cập nhật thành công
            if (updateCheck) {
                model.setValueAt(masp, selectedRow, 0);
                model.setValueAt(tensp, selectedRow, 1);
                model.setValueAt(newLoaisp, selectedRow, 2);  // Đã sửa
                model.setValueAt(hangsx, selectedRow, 3);
                model.setValueAt(newKichthuoc, selectedRow, 4);  // Đã sửa
                model.setValueAt(newSoluong, selectedRow, 5);    // Đã sửa
                model.setValueAt(gia, selectedRow, 6);

                JOptionPane.showMessageDialog(this, "Cập nhật thông tin sản phẩm thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật thất bại. Vui lòng kiểm tra lại dữ liệu.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi sửa dữ liệu: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnHuyBoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyBoActionPerformed
        txtMaSP.setText("");
        txtTenSP.setText("");
        cbLoaiSP.setSelectedItem("");
        txtHangSX.setText("");
        cbKichThuoc.setSelectedItem("");
        spSoLuong.setValue("1");
        txtGia.setText("");
    }//GEN-LAST:event_btnHuyBoActionPerformed

    private void btnTroLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTroLaiActionPerformed
        this.dispose();
        
        new Menu_QuanLy().setVisible(true);
    }//GEN-LAST:event_btnTroLaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        // Tạo và hiển thị giao diện
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLySanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuyBo;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnTroLai;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbKichThuoc;
    private javax.swing.JComboBox<String> cbLoaiSP;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spSoLuong;
    private javax.swing.JTable tableKetQua;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtHangSX;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtTenSP;
    // End of variables declaration//GEN-END:variables

    private void showTable() {
        sanpham = new SanPhamDAO().hienThiDanhSachSanPham();
        model.setRowCount(0);
        for (SanPham sp : sanpham) {
            model.addRow(new Object[]{
                tableKetQua.getRowCount() + 1, sp.getMaSP(), sp.getTenSP(), sp.getLoaiSP(), sp.getTenHSX(), sp.getKichThuoc(), sp.getSoLuong(), sp.getGia()
            });

        }
    }

    private SanPham SanPham() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
